<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.worksystem.mapper.UserMapper">

    <!-- Result Map -->
    <resultMap id="UserResultMap" type="com.worksystem.entity.User">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="department" column="department"/>
        <result property="role" column="role"/>
        <result property="enabled" column="enabled"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="lastLoginAt" column="last_login_at"/>
    </resultMap>

    <!-- 사용자 ID로 조회 -->
    <select id="findByUserId" resultMap="UserResultMap">
        SELECT * FROM users 
        WHERE user_id = #{userId} AND enabled = true
    </select>

    <!-- ID로 조회 -->
    <select id="findById" resultMap="UserResultMap">
        SELECT * FROM users 
        WHERE id = #{id}
    </select>

    <!-- 모든 사용자 조회 -->
    <select id="findAll" resultMap="UserResultMap">
        SELECT * FROM users 
        ORDER BY created_at DESC
    </select>

    <!-- 부서별 사용자 조회 -->
    <select id="findByDepartment" resultMap="UserResultMap">
        SELECT * FROM users 
        WHERE department = #{department} AND enabled = true
        ORDER BY name
    </select>

    <!-- 역할별 사용자 조회 -->
    <select id="findByRole" resultMap="UserResultMap">
        SELECT * FROM users 
        WHERE role = #{role} AND enabled = true
        ORDER BY name
    </select>

    <!-- 사용자 생성 -->
    <insert id="insert" parameterType="com.worksystem.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (
            user_id, password, name, email, department, role, enabled, created_at, updated_at
        ) VALUES (
            #{userId}, #{password}, #{name}, #{email}, #{department}, #{role}, #{enabled}, #{createdAt}, #{updatedAt}
        )
    </insert>

    <!-- 사용자 정보 수정 -->
    <update id="update" parameterType="com.worksystem.entity.User">
        UPDATE users SET
            name = #{name},
            email = #{email},
            department = #{department},
            role = #{role},
            enabled = #{enabled},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword">
        UPDATE users SET
            password = #{password},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 마지막 로그인 시간 업데이트 -->
    <update id="updateLastLoginAt">
        UPDATE users SET
            last_login_at = #{lastLoginAt}
        WHERE user_id = #{userId}
    </update>

    <!-- 사용자 활성화/비활성화 -->
    <update id="updateEnabled">
        UPDATE users SET
            enabled = #{enabled},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="delete">
        DELETE FROM users WHERE user_id = #{userId}
    </delete>

    <!-- 사용자 ID 존재 여부 확인 -->
    <select id="existsByUserId" resultType="boolean">
        SELECT COUNT(*) > 0 FROM users WHERE user_id = #{userId}
    </select>

    <!-- 이메일 존재 여부 확인 -->
    <select id="existsByEmail" resultType="boolean">
        SELECT COUNT(*) > 0 FROM users WHERE email = #{email}
    </select>

</mapper>
